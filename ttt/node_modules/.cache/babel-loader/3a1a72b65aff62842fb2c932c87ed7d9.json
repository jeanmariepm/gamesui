{"ast":null,"code":"var _jsxFileName = \"/Users/jeanmariemariadassou/gamesui/ttt/src/comps/Board.js\";\nimport React, { Component } from \"react\";\nimport Square from \"./Square\";\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      squares: Array(9).fill(\":\"),\n      winner: \"Z\"\n    };\n\n    this.resetBoard = () => {\n      this.setState({\n        squares: Array(9).fill(\":\"),\n        winner: \"Z\"\n      });\n    };\n\n    this.clickHandler = i => {\n      let winner = this.state.winner;\n\n      if (winner !== \"Z\") {\n        console.log(`Disabling clickHandler as winner is ${winner}`);\n        return;\n      }\n\n      const squares = this.state.squares.slice();\n      squares[i] = \"X\";\n      winner = this.calculateWinner(squares);\n\n      if (winner !== \"X\") {\n        console.log(`calling goetAIAction for ${squares}`);\n        let action = this.getAIAction(squares);\n        squares[action] = \"O\";\n        console.log(` ... dine with goetAIAction board now is ${squares}`);\n      } else {\n        console.log(`X must be the ${winner}`);\n      }\n\n      winner = this.calculateWinner(squares);\n\n      if (winner !== \"Z\") {\n        winner = winner === \"X\" ? \"You\" : \"AI\";\n      }\n\n      this.setState({\n        squares: squares,\n        winner: winner\n      });\n    };\n\n    this.getAIAction = squares => {\n      // return center or top-left in first AI move\n      if (squares.filter(s => s === \"X\").length === 1) {\n        if (squares[4] === \":\") {\n          return 4;\n        } else if (squares[0] === \":\") {\n          return 0;\n        }\n      } // use minmax algorithm\n      // find action with least value by choosing opp's action with highest value\n\n\n      let [next_val, action] = this.minmax(squares, \"O\");\n      console.log(`getAIAction Got ${next_val} ${action} from minmax`);\n\n      if (action == null) {\n        action = squares.findIndex(s => s === \":\");\n      }\n\n      return action;\n    };\n\n    this.minmax = (s, player, depth = 0) => {\n      let squares = s.slice();\n      let next_val = 0;\n      let action = -1;\n      const best_val = player === \"X\" ? 1 : -1;\n      const next_player = player === \"X\" ? \"O\" : \"X\"; // pick a winning/loss-avoiding move if one exist\n\n      [player, next_player].forEach(cplayer => {\n        if (next_val === 0) {\n          squares.forEach((element, index) => {\n            if (element === \":\") {\n              squares[index] = cplayer;\n\n              if (this.calculateWinner(squares) === cplayer) {\n                next_val = cplayer === player ? best_val : -best_val;\n                console.log(`${cplayer} wins at ${index} with board ${squares} and next val is ${next_val}`);\n                action = index;\n              }\n\n              squares[index] = \":\";\n            }\n          });\n        }\n      });\n      console.log(`checked for winner and val is ${next_val}`); // pick the best remaining\n\n      if (next_val === 0) {\n        let [cnext_val, caction] = [next_val, action];\n        squares.forEach((element, index) => {\n          if (element === \":\") {\n            squares[index] = player;\n            [next_val, action] = this.minmax(squares, player = player === \"X\" ? \"O\" : \"X\", depth = depth + 1);\n\n            if (next_val === -best_val) {\n              [cnext_val, caction] = [next_val, action];\n            } else if (next_val === 0) {\n              [cnext_val, caction] = [next_val, action];\n            }\n\n            squares[index] = \":\";\n          }\n        });\n        [next_val, action] = [cnext_val, caction];\n      }\n\n      return [next_val, action];\n    };\n\n    this.calculateWinner = squares => {\n      const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n\n        if (squares[a] !== \":\" && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return squares[a];\n        }\n      }\n\n      return \"Z\";\n    };\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.clickHandler(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    const winner = this.state.winner;\n    console.log(`rendering winner is ${winner}`);\n    let status;\n\n    if (winner !== \"Z\") {\n      status = `Winner: ${winner}`;\n      console.log(`rendering winnerstatus is ${status}`);\n    } else {\n      status = `Next player: You`;\n      console.log(`rendering next status is ${status}`);\n    }\n\n    const statusStyle = {\n      backgroundColor: \"blue\",\n      margin: \"4px\",\n      width: \"10px\"\n    };\n    const resetStyle = {\n      backgroundColor: \"green\",\n      fontSize: \"10px\",\n      borderRadius: \"4px\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: statusStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: resetStyle,\n      onClick: this.resetBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, \"Reset\")));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/jeanmariemariadassou/gamesui/ttt/src/comps/Board.js"],"names":["React","Component","Square","Board","state","squares","Array","fill","winner","resetBoard","setState","clickHandler","i","console","log","slice","calculateWinner","action","getAIAction","filter","s","length","next_val","minmax","findIndex","player","depth","best_val","next_player","forEach","cplayer","element","index","cnext_val","caction","lines","a","b","c","renderSquare","render","status","statusStyle","backgroundColor","margin","width","resetStyle","fontSize","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Square from \"./Square\";\n\nclass Board extends Component {\n  state = {\n    squares: Array(9).fill(\":\"),\n    winner: \"Z\",\n  };\n\n  resetBoard = () => {\n    this.setState({\n      squares: Array(9).fill(\":\"),\n      winner: \"Z\",\n    });\n  };\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.clickHandler(i)}\n      />\n    );\n  }\n\n  clickHandler = (i) => {\n    let winner = this.state.winner;\n    if (winner !== \"Z\") {\n      console.log(`Disabling clickHandler as winner is ${winner}`);\n      return;\n    }\n    const squares = this.state.squares.slice();\n    squares[i] = \"X\";\n\n    winner = this.calculateWinner(squares);\n    if (winner !== \"X\") {\n      console.log(`calling goetAIAction for ${squares}`);\n      let action = this.getAIAction(squares);\n      squares[action] = \"O\";\n      console.log(` ... dine with goetAIAction board now is ${squares}`);\n    } else {\n      console.log(`X must be the ${winner}`);\n    }\n    winner = this.calculateWinner(squares);\n    if (winner !== \"Z\") {\n      winner = winner === \"X\" ? \"You\" : \"AI\";\n    }\n\n    this.setState({\n      squares: squares,\n      winner: winner,\n    });\n  };\n\n  getAIAction = (squares) => {\n    // return center or top-left in first AI move\n    if (squares.filter((s) => s === \"X\").length === 1) {\n      if (squares[4] === \":\") {\n        return 4;\n      } else if (squares[0] === \":\") {\n        return 0;\n      }\n    }\n    // use minmax algorithm\n    // find action with least value by choosing opp's action with highest value\n    let [next_val, action] = this.minmax(squares, \"O\");\n    console.log(`getAIAction Got ${next_val} ${action} from minmax`);\n    if (action == null) {\n      action = squares.findIndex((s) => s === \":\");\n    }\n    return action;\n  };\n\n  minmax = (s, player, depth = 0) => {\n    let squares = s.slice();\n    let next_val = 0;\n    let action = -1;\n    const best_val = player === \"X\" ? 1 : -1;\n    const next_player = player === \"X\" ? \"O\" : \"X\";\n\n    // pick a winning/loss-avoiding move if one exist\n    [player, next_player].forEach((cplayer) => {\n      if (next_val === 0) {\n        squares.forEach((element, index) => {\n          if (element === \":\") {\n            squares[index] = cplayer;\n            if (this.calculateWinner(squares) === cplayer) {\n              next_val = cplayer === player ? best_val : -best_val;\n              console.log(\n                `${cplayer} wins at ${index} with board ${squares} and next val is ${next_val}`\n              );\n              action = index;\n            }\n            squares[index] = \":\";\n          }\n        });\n      }\n    });\n    console.log(`checked for winner and val is ${next_val}`);\n    // pick the best remaining\n    if (next_val === 0) {\n      let [cnext_val, caction] = [next_val, action];\n      squares.forEach((element, index) => {\n        if (element === \":\") {\n          squares[index] = player;\n          [next_val, action] = this.minmax(\n            squares,\n            (player = player === \"X\" ? \"O\" : \"X\"),\n            (depth = depth + 1)\n          );\n          if (next_val === -best_val) {\n            [cnext_val, caction] = [next_val, action];\n          } else if (next_val === 0) {\n            [cnext_val, caction] = [next_val, action];\n          }\n          squares[index] = \":\";\n        }\n      });\n      [next_val, action] = [cnext_val, caction];\n    }\n    return [next_val, action];\n  };\n\n  calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] !== \":\" &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    return \"Z\";\n  };\n\n  render() {\n    const winner = this.state.winner;\n    console.log(`rendering winner is ${winner}`);\n    let status;\n    if (winner !== \"Z\") {\n      status = `Winner: ${winner}`;\n      console.log(`rendering winnerstatus is ${status}`);\n    } else {\n      status = `Next player: You`;\n      console.log(`rendering next status is ${status}`);\n    }\n\n    const statusStyle = {\n      backgroundColor: \"blue\",\n      margin: \"4px\",\n      width: \"10px\",\n    };\n    const resetStyle = {\n      backgroundColor: \"green\",\n      fontSize: \"10px\",\n      borderRadius: \"4px\",\n    };\n    return (\n      <div>\n        <div style={statusStyle}>{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <div className=\"board-row\">\n          <button style={resetStyle} onClick={this.resetBoard}>\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}