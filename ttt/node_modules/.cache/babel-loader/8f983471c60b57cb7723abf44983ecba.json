{"ast":null,"code":"var _jsxFileName = \"/Users/jeanmariemariadassou/gamesui/ttt/src/components/board/Board.js\";\nimport React, { Component } from \"react\";\nimport Square from \"../square/Square\";\nimport classes from \"./Board.module.css\";\nimport Game from \"../../logic/Game\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resetBoard = () => {\n      this.setState({\n        game: new Game()\n      });\n    };\n\n    this.clickHandler = i => {\n      const game = this.state.gane;\n\n      if (game.calculateWinner()) {\n        console.log(`Disabling clickHandler as we have a winners `);\n        return;\n      }\n\n      game.setAction(\"X\", i);\n      const action = game.getAIAction();\n\n      if (action) {\n        game.setAction(\"O\", action);\n      }\n\n      this.setState({\n        game: game\n      });\n    };\n\n    this.state = {\n      game: new Date()\n    };\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.state.game.squares[i],\n      onClick: () => this.clickHandler(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    const winner = this.state.game.calculateWinner();\n    let status;\n\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = `Next player: You`;\n    }\n\n    const resetStyle = {\n      backgroundColor: \"green\",\n      fontSize: \"10px\",\n      borderRadius: \"4px\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.Status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, status)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: resetStyle,\n      onClick: this.resetBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Reset\")));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/jeanmariemariadassou/gamesui/ttt/src/components/board/Board.js"],"names":["React","Component","Square","classes","Game","Board","constructor","props","resetBoard","setState","game","clickHandler","i","state","gane","calculateWinner","console","log","setAction","action","getAIAction","Date","renderSquare","squares","render","winner","status","resetStyle","backgroundColor","fontSize","borderRadius","Status"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Square from \"../square/Square\";\nimport classes from \"./Board.module.css\";\nimport Game from \"../../logic/Game\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { game: new Date() };\n  }\n\n  resetBoard = () => {\n    this.setState({\n      game: new Game(),\n    });\n  };\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.game.squares[i]}\n        onClick={() => this.clickHandler(i)}\n      />\n    );\n  }\n\n  clickHandler = (i) => {\n    const game = this.state.gane;\n    if (game.calculateWinner()) {\n      console.log(`Disabling clickHandler as we have a winners `);\n      return;\n    }\n    game.setAction(\"X\", i);\n    const action = game.getAIAction();\n    if (action) {\n      game.setAction(\"O\", action);\n    }\n\n    this.setState({\n      game: game,\n    });\n  };\n\n  render() {\n    const winner = this.state.game.calculateWinner();\n    let status;\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = `Next player: You`;\n    }\n\n    const resetStyle = {\n      backgroundColor: \"green\",\n      fontSize: \"10px\",\n      borderRadius: \"4px\",\n    };\n    return (\n      <div>\n        <div>\n          <p className={classes.Status}>{status}</p>\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <div className=\"board-row\">\n          <button style={resetStyle} onClick={this.resetBoard}>\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}