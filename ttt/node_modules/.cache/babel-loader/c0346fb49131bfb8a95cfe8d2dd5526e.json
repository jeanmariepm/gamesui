{"ast":null,"code":"var _jsxFileName = \"/Users/jeanmariemariadassou/gamesui/ttt/src/components/board/Board.js\";\nimport React, { Component } from \"react\";\nimport Square from \"../square/Square\";\nimport classes from \"./Board.module.css\";\nimport Game from \"../../logic/Game\";\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      game: new Game()\n    };\n\n    this.resetBoard = () => {\n      this.setState({\n        game: new Game()\n      });\n    };\n\n    this.clickHandler = i => {\n      const game = this.state.gane;\n\n      if (game.calculateWinner()) {\n        console.log(`Disabling clickHandler as winner is ${winner}`);\n        return;\n      }\n\n      game.setAction(\"X\", i);\n      const action = game.getAIAction();\n\n      if (action) {\n        game.setAction(\"O\", action);\n      }\n\n      this.setState({\n        game: game\n      });\n    };\n\n    this.getAIAction = squares => {\n      // return center or top-left in first AI move\n      if (squares.filter(s => s === \"X\").length === 1) {\n        if (squares[4] === \":\") {\n          return 4;\n        } else if (squares[0] === \":\") {\n          return 0;\n        }\n      } // use minmax algorithm\n      // find action with least value by choosing opp's action with highest value\n\n\n      let [next_val, action] = this.minmax(squares, \"O\");\n      console.log(`getAIAction Got ${next_val} ${action} from minmax`);\n\n      if (action == null) {\n        action = squares.findIndex(s => s === \":\");\n      }\n\n      return action;\n    };\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.state.game.squares[i],\n      onClick: () => this.clickHandler(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    const winner = this.state.game.calculateWinner();\n    let status;\n\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = `Next player: You`;\n    }\n\n    const resetStyle = {\n      backgroundColor: \"green\",\n      fontSize: \"10px\",\n      borderRadius: \"4px\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.Status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, status)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: resetStyle,\n      onClick: this.resetBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Reset\")));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/jeanmariemariadassou/gamesui/ttt/src/components/board/Board.js"],"names":["React","Component","Square","classes","Game","Board","state","game","resetBoard","setState","clickHandler","i","gane","calculateWinner","console","log","winner","setAction","action","getAIAction","squares","filter","s","length","next_val","minmax","findIndex","renderSquare","render","status","resetStyle","backgroundColor","fontSize","borderRadius","Status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BK,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAE,IAAIH,IAAJ;AADA,KADoB;;AAAA,SAK5BI,UAL4B,GAKf,MAAM;AACjB,WAAKC,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAE,IAAIH,IAAJ;AADM,OAAd;AAGD,KAT2B;;AAAA,SAoB5BM,YApB4B,GAoBZC,CAAD,IAAO;AACpB,YAAMJ,IAAI,GAAG,KAAKD,KAAL,CAAWM,IAAxB;;AACA,UAAIL,IAAI,CAACM,eAAL,EAAJ,EAA4B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAa,uCAAsCC,MAAO,EAA1D;AACA;AACD;;AACDT,MAAAA,IAAI,CAACU,SAAL,CAAe,GAAf,EAAoBN,CAApB;AACA,YAAMO,MAAM,GAAGX,IAAI,CAACY,WAAL,EAAf;;AACA,UAAID,MAAJ,EAAY;AACVX,QAAAA,IAAI,CAACU,SAAL,CAAe,GAAf,EAAoBC,MAApB;AACD;;AAED,WAAKT,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAEA;AADM,OAAd;AAGD,KAnC2B;;AAAA,SAqC5BY,WArC4B,GAqCbC,OAAD,IAAa;AACzB;AACA,UAAIA,OAAO,CAACC,MAAR,CAAgBC,CAAD,IAAOA,CAAC,KAAK,GAA5B,EAAiCC,MAAjC,KAA4C,CAAhD,EAAmD;AACjD,YAAIH,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB;AACtB,iBAAO,CAAP;AACD,SAFD,MAEO,IAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB;AAC7B,iBAAO,CAAP;AACD;AACF,OARwB,CASzB;AACA;;;AACA,UAAI,CAACI,QAAD,EAAWN,MAAX,IAAqB,KAAKO,MAAL,CAAYL,OAAZ,EAAqB,GAArB,CAAzB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBS,QAAS,IAAGN,MAAO,cAAlD;;AACA,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAClBA,QAAAA,MAAM,GAAGE,OAAO,CAACM,SAAR,CAAmBJ,CAAD,IAAOA,CAAC,KAAK,GAA/B,CAAT;AACD;;AACD,aAAOJ,MAAP;AACD,KAtD2B;AAAA;;AAW5BS,EAAAA,YAAY,CAAChB,CAAD,EAAI;AACd,wBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,IAAX,CAAgBa,OAAhB,CAAwBT,CAAxB,CADT;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKD,YAAL,CAAkBC,CAAlB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAsCDiB,EAAAA,MAAM,GAAG;AACP,UAAMZ,MAAM,GAAG,KAAKV,KAAL,CAAWC,IAAX,CAAgBM,eAAhB,EAAf;AACA,QAAIgB,MAAJ;;AACA,QAAIb,MAAJ,EAAY;AACVa,MAAAA,MAAM,GAAI,WAAUb,MAAO,EAA3B;AACD,KAFD,MAEO;AACLa,MAAAA,MAAM,GAAI,kBAAV;AACD;;AAED,UAAMC,UAAU,GAAG;AACjBC,MAAAA,eAAe,EAAE,OADA;AAEjBC,MAAAA,QAAQ,EAAE,MAFO;AAGjBC,MAAAA,YAAY,EAAE;AAHG,KAAnB;AAKA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAE9B,OAAO,CAAC+B,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BL,MAA/B,CADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CAJF,eASE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CATF,eAcE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CAdF,eAmBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAEG,UAAf;AAA2B,MAAA,OAAO,EAAE,KAAKtB,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAnBF,CADF;AA2BD;;AAjG2B;;AAoG9B,eAAeH,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Square from \"../square/Square\";\nimport classes from \"./Board.module.css\";\nimport Game from \"../../logic/Game\";\n\nclass Board extends Component {\n  state = {\n    game: new Game(),\n  };\n\n  resetBoard = () => {\n    this.setState({\n      game: new Game(),\n    });\n  };\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.game.squares[i]}\n        onClick={() => this.clickHandler(i)}\n      />\n    );\n  }\n\n  clickHandler = (i) => {\n    const game = this.state.gane;\n    if (game.calculateWinner()) {\n      console.log(`Disabling clickHandler as winner is ${winner}`);\n      return;\n    }\n    game.setAction(\"X\", i);\n    const action = game.getAIAction();\n    if (action) {\n      game.setAction(\"O\", action);\n    }\n\n    this.setState({\n      game: game,\n    });\n  };\n\n  getAIAction = (squares) => {\n    // return center or top-left in first AI move\n    if (squares.filter((s) => s === \"X\").length === 1) {\n      if (squares[4] === \":\") {\n        return 4;\n      } else if (squares[0] === \":\") {\n        return 0;\n      }\n    }\n    // use minmax algorithm\n    // find action with least value by choosing opp's action with highest value\n    let [next_val, action] = this.minmax(squares, \"O\");\n    console.log(`getAIAction Got ${next_val} ${action} from minmax`);\n    if (action == null) {\n      action = squares.findIndex((s) => s === \":\");\n    }\n    return action;\n  };\n\n  render() {\n    const winner = this.state.game.calculateWinner();\n    let status;\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = `Next player: You`;\n    }\n\n    const resetStyle = {\n      backgroundColor: \"green\",\n      fontSize: \"10px\",\n      borderRadius: \"4px\",\n    };\n    return (\n      <div>\n        <div>\n          <p className={classes.Status}>{status}</p>\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <div className=\"board-row\">\n          <button style={resetStyle} onClick={this.resetBoard}>\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}