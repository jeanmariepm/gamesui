{"ast":null,"code":"var _jsxFileName = \"/Users/jeanmariemariadassou/gamesui/ttt/src/components/board/Board.js\";\nimport React, { Component } from \"react\";\nimport Square from \"../square/Square\";\nimport classes from \"./Board.module.css\";\nimport Game from \"../../logic/Game\";\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      game: new Game()\n    };\n\n    this.resetBoard = () => {\n      this.setState({\n        game: new Game()\n      });\n    };\n  }\n\n  renderSquare(i) {\n    let dispVal = this.state.game.squares[i];\n    dispVal = dispVal ? dispVal : \":\";\n    return /*#__PURE__*/React.createElement(Square, {\n      value: dispVal,\n      onClick: () => this.clickHandler(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n  clickHandler(i) {\n    // const game = { ...this.state.gane };\n    if (this.state.game.getWinner()) {\n      console.log(`Disabling clickHandler as we have a winners `);\n      return;\n    }\n\n    this.state.game.setAction(\"X\", i);\n    const action = this.state.game.getAIAction();\n    console.log(`AI recommends: ${action}`);\n    this.state.game.setAction(\"O\", action);\n    this.setState({\n      game: this.state.game\n    });\n  }\n\n  render() {\n    let status;\n\n    if (this.state.game.isOver()) {\n      status = \"Game over: Tied\";\n    } else if (this.state.game.getWinner()) {\n      status = `Winner: ${this.state.game.getWinner()}`;\n    } else {\n      status = `Next player: You`;\n    }\n\n    const resetStyle = {\n      backgroundColor: \"green\",\n      fontSize: \"10px\",\n      borderRadius: \"4px\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.Status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, status)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: resetStyle,\n      onClick: this.resetBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Reset\")));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/jeanmariemariadassou/gamesui/ttt/src/components/board/Board.js"],"names":["React","Component","Square","classes","Game","Board","state","game","resetBoard","setState","renderSquare","i","dispVal","squares","clickHandler","getWinner","console","log","setAction","action","getAIAction","render","status","isOver","resetStyle","backgroundColor","fontSize","borderRadius","Status"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Square from \"../square/Square\";\nimport classes from \"./Board.module.css\";\nimport Game from \"../../logic/Game\";\n\nclass Board extends Component {\n  state = {\n    game: new Game(),\n  };\n\n  resetBoard = () => {\n    this.setState({\n      game: new Game(),\n    });\n  };\n\n  renderSquare(i) {\n    let dispVal = this.state.game.squares[i];\n    dispVal = dispVal ? dispVal : \":\";\n    return <Square value={dispVal} onClick={() => this.clickHandler(i)} />;\n  }\n\n  clickHandler(i) {\n    // const game = { ...this.state.gane };\n    if (this.state.game.getWinner()) {\n      console.log(`Disabling clickHandler as we have a winners `);\n      return;\n    }\n    this.state.game.setAction(\"X\", i);\n    const action = this.state.game.getAIAction();\n    console.log(`AI recommends: ${action}`);\n    this.state.game.setAction(\"O\", action);\n    this.setState({\n      game: this.state.game,\n    });\n  }\n\n  render() {\n    let status;\n    if (this.state.game.isOver()) {\n      status = \"Game over: Tied\";\n    } else if (this.state.game.getWinner()) {\n      status = `Winner: ${this.state.game.getWinner()}`;\n    } else {\n      status = `Next player: You`;\n    }\n\n    const resetStyle = {\n      backgroundColor: \"green\",\n      fontSize: \"10px\",\n      borderRadius: \"4px\",\n    };\n    return (\n      <div>\n        <div>\n          <p className={classes.Status}>{status}</p>\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <div className=\"board-row\">\n          <button style={resetStyle} onClick={this.resetBoard}>\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}